    dqn = DeepQLearning(environment=cart_pole_env,
                        q_learning_rate=0.0001,
                        discount_factor=0.95,
                        decaying_rate=0.95,
                        epsilon=0.9,
                        model_type=ThreeLayersModel,
                        optimizer=tf.keras.optimizers.Adam,
                        criterion=tf.keras.losses.MSE,
                        net_learning_rate=0.001)
    rewards, averaged_steps, averaged_rewards = dqn.train_agent(num_of_episodes=500,
                                                                weights_assign_num=10,
                                                                training_num=4,
                                                                batch_size=64,
                                                                epochs=1)